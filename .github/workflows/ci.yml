name: CI — Build & Tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-and-test:
    name: Build & Test (${{ matrix.os }} / ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]   # ajoute macos-latest si besoin
        build_type: [Release]

    env:
      CMAKE_BUILD_PARALLEL_LEVEL: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Linux toolchain ---
      - name: Install toolchain (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # make/gcc/g++/pkg-config + ninja + git pour vcpkg
          sudo apt-get install -y build-essential gcc g++ pkg-config ninja-build git

      # --- Windows toolchain ---
      # windows-latest a déjà MSVC, Ninja et Git, mais on force Ninja Multi-Config
      - name: Print tool versions
        run: |
          cmake --version
          ninja --version || true
          git --version

      # --- Configure ---
      - name: Configure CMake (Linux)
        if: runner.os == 'Linux'
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake -S . -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B build -G "Ninja Multi-Config"

      # --- Build ---
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: cmake --build build --config ${{ matrix.build_type }}

      # --- Tests ---
      - name: Run tests (ctest)
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure
          else
            ctest --test-dir build --output-on-failure
          fi
        shell: bash
