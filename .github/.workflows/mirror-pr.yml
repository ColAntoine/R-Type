name: Mirror to upstream via PR (without CI/CD)

on:
  push:
    branches:
      - main

jobs:
  mirror-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      UPSTREAM_REPO: EpitechPGE3-2025/G-CPP-500-STG-5-1-rtype-8
      TARGET_BRANCH: main                 # branche de destination du repo principal
      MIRROR_BRANCH: mirror-sync          # branche source dans TON repo
      EXCLUDE_PATHS: ".github ci .gitlab-ci.yml"  # chemins à exclure
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare staging directory (filtered)
        run: |
          rm -rf /tmp/staging
          mkdir -p /tmp/staging
          rsync -a --delete --exclude='.git' ./ /tmp/staging/

          cd /tmp/staging
          # Supprime les chemins CI/CD (ajuste la liste via EXCLUDE_PATHS)
          for p in $EXCLUDE_PATHS; do
            rm -rf "$p"
          done

          # Init repo dédié à la branche miroir
          git init
          git config user.name "mirror-bot"
          git config user.email "mirror-bot@users.noreply.github.com"
          git checkout -b "${MIRROR_BRANCH}"

          git add -A
          COMMIT_SHA=$(git -C "${GITHUB_WORKSPACE}" rev-parse --short HEAD)
          git commit -m "Mirror: sync ${COMMIT_SHA} (CI/CD stripped)"

          # Push vers TA branche miroir dans TON repo via PAT
          git remote add origin "https://x-access-token:${GH_PAT}@github.com/${GITHUB_REPOSITORY}.git"
          git push -f origin "${MIRROR_BRANCH}"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh jq

      - name: Create or update PR on upstream
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Vérifie s'il existe déjà une PR depuis MIRROR_BRANCH
          EXISTING=$(gh pr list \
            --repo "${UPSTREAM_REPO}" \
            --head "${{ github.repository_owner }}:${MIRROR_BRANCH}" \
            --state open --json number --jq '.[0].number' || true)

          TITLE="Mirror: sync from ${GITHUB_REPOSITORY} (${MIRROR_BRANCH} → ${TARGET_BRANCH})"
          BODY="Cette PR est générée automatiquement depuis \`${{ github.repository }}\` sur commit \`${{ github.sha }}\`.\n\nChemins exclus: \`${EXCLUDE_PATHS}\`."

          if [ -n "$EXISTING" ]; then
            echo "PR existante #$EXISTING : mise à jour du titre/corps."
            gh pr edit "$EXISTING" --repo "${UPSTREAM_REPO}" --title "$TITLE" --body "$BODY"
          else
            echo "Création d'une nouvelle PR vers ${UPSTREAM_REPO}:${TARGET_BRANCH}"
            gh pr create \
              --repo "${UPSTREAM_REPO}" \
              --title "$TITLE" \
              --body "$BODY" \
              --base "${TARGET_BRANCH}" \
              --head "${{ github.repository_owner }}:${MIRROR_BRANCH}"
          fi
